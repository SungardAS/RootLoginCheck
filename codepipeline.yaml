AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation to Set up a Project CodePipeline along with CodeBuild

Parameters:
  GitHubSourceRepositoryOwner:
    Type: String
    Default: SungardAS
    Description: Owner of the Source Repository in GitHub
  GitHubSourceRepositoryName:
    Type: String
    Default: RootLoginCheck
    Description: Name of the Source Repository in GitHub
  GitHubSourceRepositoryBranch:
    Type: String
    Default: master
    Description: Branch of the Source Repository in GitHub
  GitHubPersonalAccessToken:
    Type: String
    NoEcho: true
    Description: Personal Access Token to Access GitHub Repository
  CloudWatchLogDestinationArn:
    Type: String
    Description: CloudWatch Log Destination Arn. This destination must be in the same region with current one.
  CloudWatchLogGroupName:
    Type: String
    Description: Cloudwatch Log Group Name
  ProjectImage:
    Type: String
    AllowedValues:
      - "aws/codebuild/python:2.7.12"
      - "aws/codebuild/python:3.3.6"
      - "aws/codebuild/python:3.4.5"
      - "aws/codebuild/python:3.5.2"
      - "aws/codebuild/nodejs:4.3.2"
      - "aws/codebuild/nodejs:4.4.7"
      - "aws/codebuild/nodejs:5.12.0"
      - "aws/codebuild/nodejs:6.3.1"
      - "aws/codebuild/nodejs:7.0.0"
    Description: Implemented Programming Language

Resources:
  CodePipelineServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowCodePipelineToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "codepipeline.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:GetObject"
                      - "s3:GetObjectVersion"
                      - "s3:GetBucketVersioning"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:PutObject"
                    Resource:
                      - "arn:aws:s3:::codepipeline*"
                      - "arn:aws:s3:::elasticbeanstalk*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codecommit:CancelUploadArchive"
                      - "codecommit:GetBranch"
                      - "codecommit:GetCommit"
                      - "codecommit:GetUploadArchiveStatus"
                      - "codecommit:UploadArchive"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codedeploy:CreateDeployment"
                      - "codedeploy:GetApplicationRevision"
                      - "codedeploy:GetDeployment"
                      - "codedeploy:GetDeploymentConfig"
                      - "codedeploy:RegisterApplicationRevision"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "elasticbeanstalk:*"
                      - "ec2:*"
                      - "elasticloadbalancing:*"
                      - "autoscaling:*"
                      - "cloudwatch:*"
                      - "s3:*"
                      - "sns:*"
                      - "cloudformation:*"
                      - "rds:*"
                      - "sqs:*"
                      - "ecs:*"
                      - "iam:PassRole"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "lambda:InvokeFunction"
                      - "lambda:ListFunctions"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "opsworks:CreateDeployment"
                      - "opsworks:DescribeApps"
                      - "opsworks:DescribeCommands"
                      - "opsworks:DescribeDeployments"
                      - "opsworks:DescribeInstances"
                      - "opsworks:DescribeStacks"
                      - "opsworks:UpdateApp"
                      - "opsworks:UpdateStack"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "cloudformation:CreateStack"
                      - "cloudformation:DeleteStack"
                      - "cloudformation:DescribeStacks"
                      - "cloudformation:UpdateStack"
                      - "cloudformation:CreateChangeSet"
                      - "cloudformation:DeleteChangeSet"
                      - "cloudformation:DescribeChangeSet"
                      - "cloudformation:ExecuteChangeSet"
                      - "cloudformation:SetStackPolicy"
                      - "cloudformation:ValidateTemplate"
                      - "iam:PassRole"
                    Resource:
                      - "*"
                  -
                    Effect: "Allow"
                    Action:
                      - "codebuild:BatchGetBuilds"
                      - "codebuild:StartBuild"
                    Resource:
                      - "*"
  CloudformationLambdaExecutionRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowCloudformationToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "cloudformation.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "*"
                    Resource:
                      - "*"
  ServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowLambdaServiceToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "codebuild.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "logs:CreateLogGroup"
                      - "logs:CreateLogStream"
                      - "logs:PutLogEvents"
                    Resource:
                      - !Join
                        - ''
                        - - "arn:aws:logs:"
                          - !Ref AWS::Region
                          - ":"
                          - !Ref AWS::AccountId
                          - ":log-group:/aws/codebuild/*"
                  -
                    Effect: "Allow"
                    Action:
                      - "s3:GetObject"
                      - "s3:GetObjectVersion"
                      - "s3:PutObject"
                    Resource:
                      - !Join
                        - ''
                        - - "arn:aws:s3:::"
                          - !Ref InputArtifactS3Bucket
                          - "/*"

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join
          - '-'
          - - !Ref GitHubSourceRepositoryOwner
            - !Ref GitHubSourceRepositoryName
            - "build"
      Description: CodeBuild for a Project
      ServiceRole: !GetAtt ServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref ProjectImage
        EnvironmentVariables:
        - Name: S3_BUCKET_NAME
          Value: !Ref InputArtifactS3Bucket
        - Name: AWS_DEFAULT_REGION
          Value: !Ref AWS::Region
        - Name: AWS_ACCOUNT_ID
          Value: !Ref AWS::AccountId
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 60

  InputArtifactS3Bucket:
    Type: "AWS::S3::Bucket"

  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join
          - '-'
          - - !Ref GitHubSourceRepositoryOwner
            - !Ref GitHubSourceRepositoryName
            - "pipeline"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -
                  Name: MyApp
              Configuration:
                Owner: !Ref GitHubSourceRepositoryOwner
                Repo: !Ref GitHubSourceRepositoryName
                Branch: !Ref GitHubSourceRepositoryBranch
                OAuthToken: !Ref GitHubPersonalAccessToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: MyApp
              OutputArtifacts:
                -
                  Name: MyAppBuild
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: ChangeSetBuild
              InputArtifacts:
                -
                  Name: MyAppBuild
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                      - "changeset"
                RoleArn: !GetAtt CloudformationLambdaExecutionRole.Arn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                ParameterOverrides: !Join
                    - ''
                    - - '{"CloudWatchLogDestinationArn": "'
                      - !Ref CloudWatchLogDestinationArn
                      - '", "CloudWatchLogGroupName": "'
                      - !Ref CloudWatchLogGroupName
                      - '"}'
                TemplatePath: MyAppBuild::samTemplate.yaml
              RunOrder: 1
            -
              Name: ChangeSetExecute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                ChangeSetName: !Join
                    - '-'
                    - - !Ref GitHubSourceRepositoryOwner
                      - !Ref GitHubSourceRepositoryName
                      - "changeset"
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref InputArtifactS3Bucket
